<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
   http://www.springframework.org/schema/data/mongo
   http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

    <context:component-scan base-package="com.cubeia.games.poker.admin"/>
    <context:property-placeholder location="classpath:/admin.properties"/>
    <!--<util:properties id="adminProperties" location="classpath:/admin.properties"/>-->

    <mongo:mongo host="${mongo.host}" port="${mongo.port}" />

    <bean id="mongoStorage" class="com.cubeia.games.poker.admin.service.history.MongoStorage">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="poker"/>
    </bean>
    
    <bean id="webConfig" class="com.cubeia.games.poker.admin.Configuration">
        <property name="networkUrl" value="${network.bo-base-url}" />
        <property name="searchUrl" value="${network.search-base-url}" />
    </bean>

    <bean id="adminDAO" class="com.cubeia.games.poker.admin.db.AbstractDAO">
      <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Transaction attribute links, optional -->
    <bean id="transaction-attribute-link-props" class="org.springframework.beans.factory.config.PropertiesFactoryBean"
          p:location="classpath:transaction-attribute-links.properties"
          p:ignoreResourceNotFound="true" />

    <!-- user service -->
    <bean id="userClient"
          class="com.cubeia.backoffice.users.client.UserServiceClientHTTP"
          scope="singleton">
        <constructor-arg value="${network.user-base-url}"/>
    </bean>

    <bean id="walletClient" class="com.cubeia.backoffice.wallet.client.WalletServiceClientHTTP">
        <constructor-arg value="${network.wallet-base-url}"/>
    </bean>

    <!-- operator service -->
    <bean id="operatorClient"
          class="com.cubeia.backoffice.operator.client.OperatorServiceClientHTTP"
          scope="singleton">
        <constructor-arg value="${network.operator-base-url}"/>
    </bean>

    <bean id="networkClient" class="com.cubeia.games.poker.admin.network.CubeiaNetworkClient">
        <property name="walletClient" ref="walletClient" />
        <property name="operatorService" ref="operatorClient" />
    </bean>

    <!-- DataSource -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="jndi.dataSource"/>
        <property name="persistenceUnitName" value="adminPersistenceUnit"/>
        <property name="jpaVendorAdapter">
           <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
               <property name="showSql" value="false" />
               <property name="generateDdl" value="true" />
               <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
           </bean>
        </property>
    </bean>

    <bean id="jndi.dataSource" class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="true">
      <property name="jndiName" value="java:comp/env/jdbc/pokerDS" />
    </bean>

    <!-- Transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!-- Enables @Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
