<?xml version="1.0" encoding="utf-8"?>
<pokerLib:StyledApplication 
	xmlns:pokerLib="com.cubeia.poker.ui.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" 
	width="100%" 
	height="100%" 
	creationComplete="init()" 
	xmlns:ns2="com.cubeia.poker.table.component.*" deactivate="onDeactivate()" activate="onActivate()">
	
	<mx:Script>
		<![CDATA[
			import com.cubeia.firebase.events.PacketEvent;
			import com.cubeia.firebase.io.ProtocolObject;
			import com.cubeia.firebase.io.protocol.SeatInfoPacket;
			import com.cubeia.firebase.io.protocol.WatchRequestPacket;
			import com.cubeia.firebase.model.PlayerInfo;
			import com.cubeia.model.PokerPlayerInfo;
			import com.cubeia.multitable.bus.MessageBusClient;
			import com.cubeia.poker.event.PokerEvent;
			import com.cubeia.poker.event.PokerEventDispatcher;
			import com.cubeia.poker.event.TableEvent;
			import com.cubeia.poker.table.handler.TableHandler;
			import com.cubeia.poker.table.model.Player;
			import com.cubeia.poker.table.model.Table;
			import com.cubeia.util.players.PlayerRegistry;
			
			import flash.utils.getDefinitionByName;
			
			import mx.controls.Alert;
			import mx.controls.SWFLoader;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.core.IRawChildrenContainer;
			import mx.managers.SystemManager;
	
			private var swfLoader:Loader;
			
			public static var messageBusClient:MessageBusClient;
			
			// flag to indicate if sounds should be played
			public static var soundsEnabled:Boolean = true;
			
			[Bindable]
			public var table:Table;
			
			private var pid:int = -1;
			private var screenname:String = "N/A";
			private var seatid:int = -1;
			private var tableid:int = 1;
			private var tableSize:int = 10;
			private var autoJoin:Boolean = false;
			private var busName:String = "_poker_lobby_";
			
			private var tableHandler:TableHandler;
			//file:///C:/PokerWorkspace/poker-bin/PokerTable.html?tableid=114&tableSize=10&busName=_poker_lobby&pid=23222&seatid=-1&autoJoin=false
			
			// Flag if the client is executed within a QT Wrapper
			public static var qtDemo:Boolean = false;
			
			public function init():void
			{
				trace("Init poker table");
  				pid = FlexGlobals.topLevelApplication.parameters["pid"];
				screenname = FlexGlobals.topLevelApplication.parameters["screenname"];
				seatid = FlexGlobals.topLevelApplication.parameters["seatid"];
				tableid = FlexGlobals.topLevelApplication.parameters["tableid"];
				tableSize = FlexGlobals.topLevelApplication.parameters["tableSize"];
				autoJoin = FlexGlobals.topLevelApplication.parameters["autoJoin"];
 
				// busName = busName+pid;
				busName = FlexGlobals.topLevelApplication.parameters["busName"];
				
				table = new Table(tableid, tableSize);
				table.myPlayerId = pid;
				tableCanvas.setTableModel(table);
				chatCanvas.setTableModel(table);
				actionCanvas.setTableModel(table);
				statusCanvas.setTableModel(table);
				messageBusClient = new MessageBusClient();
				messageBusClient.start(busName, tableid);
				var wrp:WatchRequestPacket = new WatchRequestPacket();
				wrp.tableid = tableid;
				messageBusClient.send(wrp);
				
				tableHandler = new TableHandler(table);
				trace("Table Created. PID="+pid+", screenname="+screenname, "busName:"+busName);
				
				var pi:PlayerInfo = new PlayerInfo();
				pi.pid = pid;
				pi.screenname = screenname;
				PlayerRegistry.instance.addPlayerFromInfo(pi);
			}		
			
			private function onActivate():void {
				soundsEnabled = true;
				
			}
			
			private function onDeactivate():void {
				soundsEnabled = false;
				
			}
			
					
		]]>
	</mx:Script>
	
	<ns2:TableCanvas id="tableCanvas" x="0" y="0"/>
	<ns2:PokerActionCanvas x="308" y="406" id="actionCanvas"/>
	<ns2:ChatCanvas x="10" y="408" id="chatCanvas" height="134" width="290"/>
	<mx:Text x="278" y="133" text="{Number(table.mainPot/100).toFixed(2)}" width="100" visible="{table.mainPot > 0}"/>
	<mx:Label x="220" y="133" text="Main pot:" visible="{table.mainPot > 0}"/>
	<mx:Button x="570" y="491" label="Leave" click="PokerEventDispatcher.dispatch(new TableEvent(TableEvent.LEAVE_TABLE_REQUEST, tableid))"/>
	<ns2:StatusCanvas id="statusCanvas" x="10" y="544" height="24"/>
	
	
</pokerLib:StyledApplication>
