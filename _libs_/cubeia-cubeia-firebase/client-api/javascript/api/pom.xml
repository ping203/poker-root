<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cubeia.firebase.client</groupId>
  <artifactId>firebase-js-api</artifactId>
  <packaging>js</packaging>
  <name>Firebase Javascript API</name>

 <parent>
 	<groupId>com.cubeia.firebase.client</groupId>
	<artifactId>firebase-js-api-root</artifactId>
	<version>1.9.14-SNAPSHOT</version>
</parent>

  <organization>
    <name>Cubeia Ltd</name>
    <url>http://www.cubeia.com/</url>
  </organization>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javascript-maven-plugin-version>2.0.0-alpha-1</javascript-maven-plugin-version>
  </properties>


  <build>
    <extensions>
      <extension>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javascript-maven-plugin</artifactId>
	<version>${javascript-maven-plugin-version}</version>
      </extension>
    </extensions>  
  
    <plugins>
      <!-- 
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          
        </configuration>
      </plugin>
      -->
        <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>maven-replacer-plugin</artifactId>
            <version>1.4.1</version>
            <executions>
                <execution>
                    <phase>process-sources</phase>
                    <goals>
                        <goal>replace</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <includes>
                    <include>target/classes/**/*.js</include>
                </includes>
                <regex>true</regex>
                <regexFlags>
                    <regexFlag>DOTALL</regexFlag>
                </regexFlags>
                <unescape>true</unescape>

                <token>//DEFINED_FOR_JASMINE_TESTING_START.*?//DEFINED_FOR_JASMINE_TESTING_END</token>
                <value />
            </configuration>
        </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javascript-maven-plugin</artifactId>
	<version>${javascript-maven-plugin-version}</version>
      </plugin>
    
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jslint-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jslint</goal>
              <goal>test-jslint</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
		  <predefinedVars>console,window,ODOBO_DEBUG</predefinedVars>
		  <assumeABrowser>true</assumeABrowser>
          <disallowBitwiseOperators>false</disallowBitwiseOperators>
          <allowOneVarStatementPerFunction>false</allowOneVarStatementPerFunction>
          <sourceDirectory>${project.basedir}/src/main/js</sourceDirectory>
          <disallowInsecureCharsInRegExp>false</disallowInsecureCharsInRegExp>
          <tolerateEval>true</tolerateEval>
          <excludes>
            <exclude>*_spec.js</exclude>
            <exclude>json2.js</exclude>
            <exclude>socket.io.js</exclude>
          </excludes>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>1.0.2-beta-5</version>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jsSrcDir>${project.basedir}/src/main/js</jsSrcDir>
          <jsTestSrcDir>${project.basedir}/src/test/js</jsTestSrcDir>
        </configuration>
          </plugin>
    
    
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <nosuffix>false</nosuffix>
          <nomunge>true</nomunge>
          <sourceDirectory>${basedir}/target/classes/js</sourceDirectory>
          <outputDirectory>${project.build.directory}/js-minified</outputDirectory>
          <gzip>true</gzip>
          <aggregations>
            <aggregation>
              <insertNewLine>false</insertNewLine>
              <output>${project.build.directory}/${project.build.finalName}.js</output>
              <inputDir>${project.build.directory}/js-minified</inputDir>
              <includes>
                <include>**/*.js</include>
              </includes>
                <excludes>
                    <exclude>org/codehaus/mojo/**/*.js</exclude>
                </excludes>
            </aggregation>
          </aggregations>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <basedir>${basedir}</basedir>
              <artifacts>
                <artifact>
                  <file>${basedir}/target/${project.build.finalName}.js</file>
                  <type>js</type>
                  <classifier>javascript</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    
      
      
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									com.google.code.maven-replacer-plugin
    								</groupId>
    								<artifactId>
    									maven-replacer-plugin
    								</artifactId>
    								<versionRange>
    									[1.4.1,)
    								</versionRange>
    								<goals>
    									<goal>replace</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore />
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>

  <!-- FIXME: Temporary declaration of Codehaus repos until this moves to 
    Maven Central -->
  <repositories>
    <repository>
      <id>snapshots</id>
      <url>https://nexus.codehaus.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>snapshots</id>
      <url>https://nexus.codehaus.org/content/repositories/snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>
	
	
