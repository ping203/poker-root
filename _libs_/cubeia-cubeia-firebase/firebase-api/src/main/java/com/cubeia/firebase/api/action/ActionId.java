/**
 * Copyright (C) 2011 Cubeia Ltd <info@cubeia.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.cubeia.firebase.api.action;

import java.io.Serializable;

import com.cubeia.firebase.api.util.Arguments;

/**
 * An action ID identifies an action within a firebase cluster. It contains
 * a sequence number (which is atomically incremented) and a server id which 
 * associates the action with a server from which it originally originated. 
 * 
 * <p><b>NB: </b> Instance of action IDs are generated by a services and should
 * not be made manually.
 * 
 * <p>The association with an originating server is used instead of a global ID
 * system. The server only needs to guarantee unique ID's and these will be 
 * globally unique by virtual of the server being unique.
 * 
 * @author Lars J. Nilsson
 */
public abstract class ActionId implements Serializable {

	private static final long serialVersionUID = 6795548796644324538L;

	protected final String serverId;
	protected final long sequence;
	
	protected ActionId(String serverId, long sequence) {
		Arguments.notNull(serverId, "serverId");
		this.serverId = serverId;
		this.sequence = sequence;
	}
	
	public long getSequence() {
		return sequence;
	}
	
	public String getServerId() {
		return serverId;
	}
	
	@Override
	public String toString() {
		return serverId + " { " + sequence + " }";
	}
	
	@Override
	public boolean equals(Object obj) {
		if(!(obj instanceof ActionId)) return false;
		else {
			return hashCode() == obj.hashCode();
		}
	}
	
	@Override
	public int hashCode() {
		return serverId.hashCode() ^ Long.valueOf(sequence).hashCode();
	}
}
