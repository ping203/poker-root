<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd

    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
        default-autowire="byName">


    <context:component-scan base-package="com.cubeia.backoffice.operator.service"/>

    <bean id="operator.transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="operator.entityManagerFactory"/>
    </bean>

    <!--
          NOTE: We cannot use an annotation-driven transactional manager since that will take
            precedence over any other spring module that might include this one. So we will take
            the AOP route instead. This will ensure that we are using our internal transaction manager.
       -->

    <tx:advice id="operator.txAdvice" transaction-manager="operator.transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="operator.txPointcut" expression="execution(* com.cubeia.backoffice.operator.service.manager.*Manager.*(..))"/>
        <aop:advisor advice-ref="operator.txAdvice" pointcut-ref="operator.txPointcut"/>
    </aop:config>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="operator.entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="operatorPersistenceUnit"/>
        <property name="dataSource" ref="operator.dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
    </bean>

    <bean id="operator.dataSource"
          class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="true">
        <property name="jndiName" value="java:comp/env/jdbc/operatorDS"/>
    </bean>

</beans>